{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","a","fetch","then","response","json","FindMovie","addToList","useState","setTitle","foundMovie","setFoundMovie","htmlFor","type","id","placeholder","name","value","onChange","event","target","onClick","getMovies","found","Response","Title","Plot","Poster","imdbID","App","state","data","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6yEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,sCCXlCG,EAAO,uD,4CAEN,WAAyBd,GAAzB,SAAAe,EAAA,+EACEC,MAAM,GAAD,OAAIF,EAAJ,cAAiBd,IAC1BiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAFxB,4C,sBCKA,IAAMC,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,EAA0BC,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAAoCD,mBAAS,MAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAwBA,OACE,oCACE,0BAAMrB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQsB,QAAQ,eAAjC,eAIA,yBAAKtB,UAAU,WACb,2BACEuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZzB,UAAU,kBACV0B,KAAK,QACLC,MAAO/B,EACPgC,SAtCS,SAACC,GACpBV,EAASU,EAAMC,OAAOH,WAyCf/B,EACG,GAEA,uBAAGI,UAAU,kBAAb,yCAON,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,kBACV+B,QArDS,YDbhB,SAAP,mCCcIC,CAAUpC,GACPiB,MAAK,SAACoB,GACkB,SAAnBA,EAAMC,SACRb,EAAc,CACZzB,MAAOqC,EAAME,MACbtC,YAAaoC,EAAMG,KACnBtC,OAAQmC,EAAMI,OACdtC,QAAQ,8BAAD,OAAgCkC,EAAMK,QAC7C7B,OAAQwB,EAAMK,UAGhBnB,EAAS,IACTE,EAAc,YAqCZ,iBASF,yBAAKrB,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,oBACV+B,QAAS,WACPd,EAAUG,GACVD,EAAS,KACTE,EAAc,QANlB,sBAeLD,GAEC,yBAAKpB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcoB,M,QCxFZmB,EAAb,4MACEC,MAAQ,CACNnC,OAAQoC,GAFZ,EAKExB,UAAY,SAACG,GACX,IAAQf,EAAW,EAAKmC,MAAhBnC,OAEJe,IAAef,EAAOqC,MACxB,SAAAnC,GAAK,OAAIA,EAAME,SAAWW,EAAWX,WAErC,EAAKkC,UAAS,SAAAH,GAAK,MAAK,CACtBnC,OAAO,GAAD,mBAAMmC,EAAMnC,QAAZ,CAAoBe,SAZlC,4CAiBE,WACE,IAAQf,EAAWuC,KAAKJ,MAAhBnC,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWiB,UAAW2B,KAAK3B,kBA1BrC,GAAyB4B,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7c778771.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_URL = `https://www.omdbapi.com/?i=tt3896198&apikey=efb1a018`;\n\nexport async function getMovies(title) {\n  return fetch(`${API_URL}&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api/api';\n\nexport const FindMovie = ({ addToList }) => {\n  const [title, setTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const onSerchMovie = () => {\n    getMovies(title)\n      .then((found) => {\n        if (found.Response === 'True') {\n          setFoundMovie({\n            title: found.Title,\n            description: found.Plot,\n            imgUrl: found.Poster,\n            imdbUrl: `https://www.imdb.com/title/${found.imdbID}`,\n            imdbId: found.imdbID,\n          });\n        } else {\n          setTitle('');\n          setFoundMovie(null);\n        }\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {title\n            ? ''\n            : (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onSerchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addToList(foundMovie);\n                setTitle(' ');\n                setFoundMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {foundMovie\n        && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...foundMovie} />\n        </div>\n        )\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addToList: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addToList = (foundMovie) => {\n    const { movies } = this.state;\n\n    if (foundMovie && !movies.find(\n      movie => movie.imdbId === foundMovie.imdbId,\n    )) {\n      this.setState(state => ({\n        movies: [...state.movies, foundMovie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addToList={this.addToList} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}